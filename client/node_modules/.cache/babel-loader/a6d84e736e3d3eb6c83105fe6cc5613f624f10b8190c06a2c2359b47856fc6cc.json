{"ast":null,"code":"var _jsxFileName = \"C:\\\\minorProject\\\\client\\\\src\\\\contexts\\\\SocketContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nexport const useSocket = () => {\n  _s();\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n_s(useSocket, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  const [socket, setSocket] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState(new Set());\n  const {\n    user\n  } = useAuth();\n  useEffect(() => {\n    if (user) {\n      const newSocket = io('http://localhost:5000');\n      newSocket.on('connect', () => {\n        console.log('Connected to server');\n        newSocket.emit('join', user.id);\n      });\n      newSocket.on('disconnect', () => {\n        console.log('Disconnected from server');\n      });\n      setSocket(newSocket);\n      return () => {\n        newSocket.close();\n      };\n    } else {\n      if (socket) {\n        socket.close();\n        setSocket(null);\n      }\n    }\n  }, [user]);\n  const sendMessage = (receiverId, message) => {\n    if (socket && user) {\n      socket.emit('sendMessage', {\n        receiverId,\n        message,\n        senderId: user.id\n      });\n    }\n  };\n  const value = {\n    socket,\n    onlineUsers,\n    sendMessage\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s2(SocketProvider, \"ycrryZafRZ1d/SkirRf2A0+0n5U=\", false, function () {\n  return [useAuth];\n});\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","useAuth","jsxDEV","_jsxDEV","SocketContext","useSocket","_s","context","Error","SocketProvider","children","_s2","socket","setSocket","onlineUsers","setOnlineUsers","Set","user","newSocket","on","console","log","emit","id","close","sendMessage","receiverId","message","senderId","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/minorProject/client/src/contexts/SocketContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { useAuth } from './AuthContext';\n\nconst SocketContext = createContext();\n\nexport const useSocket = () => {\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n\nexport const SocketProvider = ({ children }) => {\n  const [socket, setSocket] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState(new Set());\n  const { user } = useAuth();\n\n  useEffect(() => {\n    if (user) {\n      const newSocket = io('http://localhost:5000');\n      \n      newSocket.on('connect', () => {\n        console.log('Connected to server');\n        newSocket.emit('join', user.id);\n      });\n\n      newSocket.on('disconnect', () => {\n        console.log('Disconnected from server');\n      });\n\n      setSocket(newSocket);\n\n      return () => {\n        newSocket.close();\n      };\n    } else {\n      if (socket) {\n        socket.close();\n        setSocket(null);\n      }\n    }\n  }, [user]);\n\n  const sendMessage = (receiverId, message) => {\n    if (socket && user) {\n      socket.emit('sendMessage', {\n        receiverId,\n        message,\n        senderId: user.id\n      });\n    }\n  };\n\n  const value = {\n    socket,\n    onlineUsers,\n    sendMessage\n  };\n\n  return (\n    <SocketContext.Provider value={value}>\n      {children}\n    </SocketContext.Provider>\n  );\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,OAAOC,EAAE,MAAM,kBAAkB;AACjC,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,gBAAGR,aAAa,CAAC,CAAC;AAErC,OAAO,MAAMS,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,OAAO,GAAGV,UAAU,CAACO,aAAa,CAAC;EACzC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;EACnE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,SAAS;AAQtB,OAAO,MAAMI,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC9C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,IAAIiB,GAAG,CAAC,CAAC,CAAC;EACzD,MAAM;IAAEC;EAAK,CAAC,GAAGhB,OAAO,CAAC,CAAC;EAE1BH,SAAS,CAAC,MAAM;IACd,IAAImB,IAAI,EAAE;MACR,MAAMC,SAAS,GAAGlB,EAAE,CAAC,uBAAuB,CAAC;MAE7CkB,SAAS,CAACC,EAAE,CAAC,SAAS,EAAE,MAAM;QAC5BC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAClCH,SAAS,CAACI,IAAI,CAAC,MAAM,EAAEL,IAAI,CAACM,EAAE,CAAC;MACjC,CAAC,CAAC;MAEFL,SAAS,CAACC,EAAE,CAAC,YAAY,EAAE,MAAM;QAC/BC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACzC,CAAC,CAAC;MAEFR,SAAS,CAACK,SAAS,CAAC;MAEpB,OAAO,MAAM;QACXA,SAAS,CAACM,KAAK,CAAC,CAAC;MACnB,CAAC;IACH,CAAC,MAAM;MACL,IAAIZ,MAAM,EAAE;QACVA,MAAM,CAACY,KAAK,CAAC,CAAC;QACdX,SAAS,CAAC,IAAI,CAAC;MACjB;IACF;EACF,CAAC,EAAE,CAACI,IAAI,CAAC,CAAC;EAEV,MAAMQ,WAAW,GAAGA,CAACC,UAAU,EAAEC,OAAO,KAAK;IAC3C,IAAIf,MAAM,IAAIK,IAAI,EAAE;MAClBL,MAAM,CAACU,IAAI,CAAC,aAAa,EAAE;QACzBI,UAAU;QACVC,OAAO;QACPC,QAAQ,EAAEX,IAAI,CAACM;MACjB,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMM,KAAK,GAAG;IACZjB,MAAM;IACNE,WAAW;IACXW;EACF,CAAC;EAED,oBACEtB,OAAA,CAACC,aAAa,CAAC0B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAnB,QAAA,EAClCA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACvB,GAAA,CApDWF,cAAc;EAAA,QAGRR,OAAO;AAAA;AAAAkC,EAAA,GAHb1B,cAAc;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}